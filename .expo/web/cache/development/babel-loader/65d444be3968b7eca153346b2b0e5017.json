{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport UILogo from \"../components/UILogo\";\nimport colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\nimport * as content from \"../constants/texts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChangePWScreen = function ChangePWScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedNumber = _useState4[0],\n      setSelectedNumber = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmed = _useState6[0],\n      setConfirmed = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenPin = parseInt(enteredValue);\n\n    if (isNaN(chosenPin)) {\n      console.log(\"Fuck you\");\n      resetInputHandler;\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenPin);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  if (confirmed) {\n    console.log(selectedNumber + \".. here ye go\");\n  }\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(UILogo, {\n        src: \"lock\"\n      }), _jsx(Text, {\n        style: styles.title,\n        children: content.pin1\n      }), _jsx(Text, {\n        style: styles.text3,\n        children: content.Passwort\n      }), _jsxs(View, {\n        style: styles.inputBox,\n        children: [_jsx(Input, {\n          title: content.pin2,\n          onChangeText: numberInputHandler,\n          value: enteredValue\n        }), _jsx(Input, {\n          title: content.pin3,\n          onChangeText: numberInputHandler,\n          value: enteredValue\n        }), _jsx(Input, {\n          title: content.pin4,\n          onChangeText: numberInputHandler,\n          value: enteredValue\n        })]\n      }), _jsx(View, {\n        style: styles.buttonBox,\n        children: _jsx(Pressable, {\n          style: styles.buttonDesign,\n          onPress: confirmInputHandler,\n          children: _jsx(Text, {\n            style: styles.textButton,\n            children: props.title\n          })\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    paddingHorizontal: 40,\n    paddingVertical: 80,\n    justifyContent: \"space-between\"\n  },\n  titleBox: {\n    color: colors.mainG,\n    fontSize: 32,\n    lineHeight: 36\n  },\n  inputBox: {},\n  title: {\n    color: colors.accBlue,\n    fontSize: 20\n  },\n  text3: {\n    color: colors.mainG,\n    fontSize: 16\n  },\n  buttonBox: {\n    elevation: 5,\n    alignItems: \"center\"\n  },\n  textButton: {\n    color: colors.mainLG,\n    fontSize: 16,\n    lineHeight: 21,\n    letterSpacing: 0.25\n  },\n  buttonDesign: {\n    borderRadius: 8,\n    height: 40,\n    width: 80,\n    elevation: 3,\n    backgroundColor: colors.accBlue,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default ChangePWScreen;","map":{"version":3,"sources":["/Users/josieincase/Documents/ProjektB/PeriodTracker/screens/ChangePWScreen.js"],"names":["React","useState","UILogo","colors","Input","content","ChangePWScreen","props","enteredValue","setEnteredValue","selectedNumber","setSelectedNumber","confirmed","setConfirmed","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenPin","parseInt","isNaN","console","log","Keyboard","dismiss","styles","container","title","pin1","text3","Passwort","inputBox","pin2","pin3","pin4","buttonBox","buttonDesign","textButton","StyleSheet","create","flex","flexDirection","paddingHorizontal","paddingVertical","justifyContent","titleBox","color","mainG","fontSize","lineHeight","accBlue","elevation","alignItems","mainLG","letterSpacing","borderRadius","height","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Alert, Pressable, Text, TouchableWithoutFeedback, Keyboard } from \"react-native\";\nimport UILogo from \"../components/UILogo\";\nimport colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\nimport * as content from \"../constants/texts\";\n\n/**\n *  ChangePWScreen!\n *  takes the UILogo & Input Component.\n *  to change Password with some describing Text.\n *  Keyboard dismisses as soon as you tab the screen so you can switch to the next field\n * \n * ToDo Styling\n *\n * ToDo Logik, checks old and new Input and fetches it from the database.\n *\n * @param {} props\n * @returns\n */\n\nconst ChangePWScreen = (props) => {\n\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [selectedNumber, setSelectedNumber] = useState();\n  const [confirmed, setConfirmed] = useState(false);\n\n  //validates Numbers only\n  const numberInputHandler = (inputText) => {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  //resets the Input in case nothing of worth was given\n  const resetInputHandler = () => {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  //confirms that a number was entered, else it throws an insult\n  const confirmInputHandler = () => {\n    const chosenPin = parseInt(enteredValue);\n    if (isNaN(chosenPin)) {\n      console.log(\"Fuck you\");\n      resetInputHandler;\n\n      return;\n    }\n    setConfirmed(true);\n    setSelectedNumber(chosenPin);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  //if pressed and confirmed selectedNumber holds the PIN\n  if (confirmed) {\n    console.log(selectedNumber + \".. here ye go\");\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={()=> {Keyboard.dismiss()}}>\n    <View style={styles.container}>\n      <UILogo src=\"lock\" />\n      \n      <Text style={styles.title}>{content.pin1}</Text>\n      \n      <Text style={styles.text3}>{content.Passwort}</Text>\n      \n      <View style={styles.inputBox}>\n      <Input title={content.pin2} onChangeText={numberInputHandler} value={enteredValue}/>\n      <Input title={content.pin3} onChangeText={numberInputHandler} value={enteredValue}/>\n      <Input title={content.pin4} onChangeText={numberInputHandler} value={enteredValue}/>\n      </View>\n\n      <View style={styles.buttonBox}>\n        <Pressable\n          style={styles.buttonDesign}\n          onPress={confirmInputHandler}\n        >\n          <Text style={styles.textButton}>{props.title}</Text>\n        </Pressable>\n      </View>\n    </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    paddingHorizontal: 40,\n    paddingVertical: 80,\n    justifyContent: \"space-between\",\n  },\n\n  titleBox: {\n    color: colors.mainG,\n    fontSize: 32,\n    lineHeight: 36,\n  },\n\n  inputBox:{\n    \n  },\n\n  title: {\n    color: colors.accBlue,\n    fontSize: 20,\n  },\n\n  text3: {\n    color: colors.mainG,\n    fontSize: 16,\n  },\n\n  //Button Styles\n  buttonBox: {\n    elevation: 5,\n    alignItems: \"center\",\n  },\n  textButton: {\n    color: colors.mainLG,\n    fontSize: 16,\n    lineHeight: 21,\n    letterSpacing: 0.25,\n  },\n  buttonDesign: {\n    borderRadius: 8,\n    height: 40,\n    width: 80,\n    elevation: 3,\n    backgroundColor: colors.accBlue,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default ChangePWScreen;\n"]},"metadata":{},"sourceType":"module"}