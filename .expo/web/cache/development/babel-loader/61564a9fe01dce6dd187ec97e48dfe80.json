{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport colors from \"../../constants/colors\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport LogoScreen from \"../../screens/LogoScreen\";\nimport AboutUsScreen from \"../../screens/AboutUsScreen\";\nimport InfoTextScreen from \"../../screens/InfoTextScreen\";\nimport MensCycleScreen from \"../../screens/MensCycleScreen\";\nimport EndOfOnBoarding from \"../../screens/EndOfOnBoarding\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\n\nvar OnBoarding = function OnBoarding(props) {\n  return _jsxs(Tab.Navigator, {\n    style: {\n      backgroundColor: colors.mainLG\n    },\n    tabBarPosition: \"bottom\",\n    screenOptions: {\n      tabBarStyle: {\n        backgroundColor: colors.mainLG\n      },\n      tabBarShowLabel: false,\n      tabBarIndicatorStyle: {\n        backgroundColor: \"transparent\"\n      },\n      tabBarIconStyle: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      tabBarItemStyle: {\n        backgroundColor: \"transparent\",\n        width: 30,\n        paddingHorizontal: 1\n      },\n      tabBarContentContainerStyle: {\n        backgroundColor: \"transparent\",\n        justifyContent: \"center\"\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"1\",\n      component: LogoScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return _jsx(View, {\n            style: {\n              height: 10,\n              width: 10,\n              borderRadius: 10,\n              backgroundColor: focused ? \"#493d8a\" : \"#748c94\"\n            }\n          });\n        },\n        tabBarIconStyle: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"2\",\n      component: AboutUsScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(View, {\n            style: {\n              height: 10,\n              width: 10,\n              borderRadius: 10,\n              backgroundColor: focused ? \"#493d8a\" : \"#748c94\"\n            }\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"3\",\n      component: InfoTextScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(View, {\n            style: {\n              height: 10,\n              width: 10,\n              borderRadius: 10,\n              backgroundColor: focused ? \"#493d8a\" : \"#748c94\"\n            }\n          });\n        },\n        tabBarIconStyle: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"4\",\n      children: function children() {\n        return _jsx(EndOfOnBoarding, {\n          updateState: props.updateOnBoarding\n        });\n      },\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(View, {\n            style: {\n              height: 10,\n              width: 10,\n              borderRadius: 10,\n              backgroundColor: focused ? \"#493d8a\" : \"#748c94\"\n            }\n          });\n        },\n        tabBarIconStyle: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }\n      }\n    })]\n  });\n};\n\nexport default OnBoarding;","map":{"version":3,"sources":["C:/Users/monav/Desktop/Uni/ProjektB/PeriodTracker/components/Navigation/OnBoarding.js"],"names":["React","colors","createMaterialTopTabNavigator","LogoScreen","AboutUsScreen","InfoTextScreen","MensCycleScreen","EndOfOnBoarding","Tab","OnBoarding","props","backgroundColor","mainLG","tabBarStyle","tabBarShowLabel","tabBarIndicatorStyle","tabBarIconStyle","display","justifyContent","alignItems","tabBarItemStyle","width","paddingHorizontal","tabBarContentContainerStyle","tabBarIcon","focused","height","borderRadius","updateOnBoarding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, TextInput, Pressable } from \"react-native\";\r\nimport colors from \"../../constants/colors\";\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\nimport LogoScreen from \"../../screens/LogoScreen\";\r\nimport AboutUsScreen from \"../../screens/AboutUsScreen\";\r\nimport InfoTextScreen from \"../../screens/InfoTextScreen\";\r\nimport MensCycleScreen from \"../../screens/MensCycleScreen\";\r\nimport EndOfOnBoarding from \"../../screens/EndOfOnBoarding\";\r\n\r\n/*\r\nThis component holds the navigation for the OnBoarding page. \r\nThe functionality is the same as from the SwipeNavigation.\r\n*/\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nconst OnBoarding = (props) => {\r\n  return (\r\n    <Tab.Navigator\r\n      style={{ backgroundColor: colors.mainLG }}\r\n      tabBarPosition={\"bottom\"}\r\n      screenOptions={{\r\n        tabBarStyle: { backgroundColor: colors.mainLG },\r\n        tabBarShowLabel: false,\r\n        tabBarIndicatorStyle: {\r\n          backgroundColor: \"transparent\",\r\n        },\r\n        tabBarIconStyle: {\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        },\r\n        tabBarItemStyle: {\r\n          //color of item-object\r\n          backgroundColor: \"transparent\",\r\n          width: 30,\r\n          paddingHorizontal: 1,\r\n        },\r\n        tabBarContentContainerStyle: {\r\n          //total backgroundcolor of bar\r\n          backgroundColor: \"transparent\",\r\n          justifyContent: \"center\",\r\n        },\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"1\"\r\n        component={LogoScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View\r\n              style={{\r\n                height: 10,\r\n                width: 10,\r\n                borderRadius: 10,\r\n                backgroundColor: focused ? \"#493d8a\" : \"#748c94\",\r\n              }}\r\n            />\r\n          ),\r\n          tabBarIconStyle: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          },\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"2\"\r\n        component={AboutUsScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View\r\n              style={{\r\n                height: 10,\r\n                width: 10,\r\n                borderRadius: 10,\r\n                backgroundColor: focused ? \"#493d8a\" : \"#748c94\",\r\n              }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"3\"\r\n        component={InfoTextScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View\r\n              style={{\r\n                height: 10,\r\n                width: 10,\r\n                borderRadius: 10,\r\n                backgroundColor: focused ? \"#493d8a\" : \"#748c94\",\r\n              }}\r\n            />\r\n          ),\r\n          tabBarIconStyle: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          },\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"4\"\r\n        children={() => (\r\n          //updateState triggers the updateOnBoarding function one component higher (App.js)\r\n          <EndOfOnBoarding updateState={props.updateOnBoarding} />\r\n        )}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View\r\n              style={{\r\n                height: 10,\r\n                width: 10,\r\n                borderRadius: 10,\r\n                backgroundColor: focused ? \"#493d8a\" : \"#748c94\",\r\n              }}\r\n            />\r\n          ),\r\n          tabBarIconStyle: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          },\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default OnBoarding;\r\n"]},"metadata":{},"sourceType":"module"}