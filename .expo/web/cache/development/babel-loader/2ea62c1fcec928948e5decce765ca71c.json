{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport colors from \"../constants/colors\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { LocaleConfig } from \"react-native-calendars\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLocaleConfig.locales[\"de\"] = {\n  monthNames: [\"Januar\", \"Februar\", \"M채rz\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n  monthNamesShort: [\"Jan.\", \"Feb.\", \"M채rz\", \"April\", \"Mai\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sept.\", \"Okt.\", \"Nov.\", \"Dez.\"],\n  dayNames: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n  dayNamesShort: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Sa\"],\n  today: \"heute\"\n};\nLocaleConfig.defaultLocale = \"de\";\n\nvar CalendarScreen = function CalendarScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDay = _useState2[0],\n      setSelectedDay = _useState2[1];\n\n  var mark = _defineProperty({}, selectedDay, {\n    selected: true,\n    selectedColor: colors.accBlue\n  });\n\n  function setDay(day) {\n    console.log(\"function: \" + day);\n    setSelectedDay(day);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: props.header\n    }), _jsx(Calendar, {\n      onDayPress: function onDayPress(day) {\n        var date = day.dateString;\n        setDay(date);\n      },\n      markedDates: mark,\n      enableSwipeMonths: true,\n      theme: {\n        calendarBackground: colors.mainLG\n      }\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(Pressable, {\n        style: styles.button1,\n        onPress: function onPress() {\n          return Alert.alert(\"am pressed omg\");\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: props.title\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 20,\n    marginVertical: 50\n  },\n  title: {\n    color: colors.accBlue,\n    fontSize: 32,\n    lineHeight: 36\n  },\n  button: {\n    margin: 50,\n    elevation: 5\n  },\n  text: {\n    color: colors.mainLG,\n    fontSize: 16,\n    lineHeight: 21,\n    letterSpacing: 0.25\n  },\n  button1: {\n    borderRadius: 8,\n    height: 40,\n    elevation: 3,\n    backgroundColor: colors.accBlue,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default CalendarScreen;","map":{"version":3,"sources":["C:/Users/monav/Desktop/Uni/ProjektB/PeriodTracker/screens/CalendarScreen.js"],"names":["React","useState","colors","Calendar","CalendarList","Agenda","LocaleConfig","locales","monthNames","monthNamesShort","dayNames","dayNamesShort","today","defaultLocale","CalendarScreen","props","selectedDay","setSelectedDay","mark","selected","selectedColor","accBlue","setDay","day","console","log","styles","container","title","header","date","dateString","calendarBackground","mainLG","button","button1","Alert","alert","text","StyleSheet","create","flex","flexDirection","justifyContent","marginHorizontal","marginVertical","color","fontSize","lineHeight","margin","elevation","letterSpacing","borderRadius","height","backgroundColor","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text, Pressable, Alert } from \"react-native\";\r\nimport colors from \"../constants/colors\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport { LocaleConfig } from \"react-native-calendars\";\r\n/**\r\n * This is the Calendar Screen for Starters.\r\n * It holds the \"When you had your last mens?\" Question ft. the\r\n * Calendar component.\r\n *\r\n * ToDo: Navigation Bar\r\n * may find another solution for the marked Dates, it's just a dummy rn\r\n * also find a way to get the input outta it but that's prob. a diff issue\r\n *\r\n */\r\nLocaleConfig.locales[\"de\"] = {\r\n  monthNames: [\r\n    \"Januar\",\r\n    \"Februar\",\r\n    \"M채rz\",\r\n    \"April\",\r\n    \"Mai\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"August\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Dezember\",\r\n  ],\r\n  monthNamesShort: [\r\n    \"Jan.\",\r\n    \"Feb.\",\r\n    \"M채rz\",\r\n    \"April\",\r\n    \"Mai\",\r\n    \"Jun.\",\r\n    \"Jul.\",\r\n    \"Aug.\",\r\n    \"Sept.\",\r\n    \"Okt.\",\r\n    \"Nov.\",\r\n    \"Dez.\",\r\n  ],\r\n  dayNames: [\r\n    \"Sonntag\",\r\n    \"Montag\",\r\n    \"Dienstag\",\r\n    \"Mittwoch\",\r\n    \"Donnerstag\",\r\n    \"Freitag\",\r\n    \"Samstag\",\r\n  ],\r\n  dayNamesShort: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Sa\"],\r\n  today: \"heute\",\r\n};\r\nLocaleConfig.defaultLocale = \"de\";\r\n\r\nconst CalendarScreen = (props) => {\r\n  const [selectedDay, setSelectedDay] = useState(\"\");\r\n  let mark = {\r\n    [selectedDay]: { selected: true, selectedColor: colors.accBlue },\r\n  };\r\n\r\n  function setDay(day) {\r\n    console.log(\"function: \" + day);\r\n    setSelectedDay(day);\r\n  }\r\n\r\n  return (\r\n    //props.header is given when calling the Screen\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{props.header}</Text>\r\n\r\n      <Calendar\r\n        onDayPress={(day) => {\r\n          const date = day.dateString;\r\n          setDay(date);\r\n        }}\r\n        markedDates={mark}\r\n        enableSwipeMonths={true}\r\n        theme={{\r\n          calendarBackground: colors.mainLG,\r\n        }}\r\n      />\r\n      <View style={styles.button}>\r\n        <Pressable\r\n          style={styles.button1}\r\n          onPress={() => Alert.alert(\"am pressed omg\")}\r\n        >\r\n          <Text style={styles.text}>{props.title}</Text>\r\n        </Pressable>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    marginHorizontal: 20,\r\n    marginVertical: 50,\r\n  },\r\n\r\n  title: {\r\n    color: colors.accBlue,\r\n    fontSize: 32,\r\n    lineHeight: 36,\r\n  },\r\n\r\n  button: {\r\n    margin: 50,\r\n    elevation: 5,\r\n  },\r\n  text: {\r\n    color: colors.mainLG,\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    letterSpacing: 0.25,\r\n  },\r\n  button1: {\r\n    borderRadius: 8,\r\n    height: 40,\r\n    elevation: 3,\r\n    backgroundColor: colors.accBlue,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default CalendarScreen;\r\n"]},"metadata":{},"sourceType":"module"}