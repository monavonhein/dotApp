{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport colors from \"../constants/colors\";\nimport * as content from \"../constants/texts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TextWSwitch = function TextWSwitch(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: content.start8\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(Switch, {\n        trackColor: {\n          false: colors.mainBlk,\n          true: colors.primBlue\n        },\n        thumbColor: isEnabled ? colors.accBlue : colors.mainG,\n        ios_backgroundColor: colors.mainBlk,\n        onValueChange: toggleSwitch,\n        value: isEnabled\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center'\n  },\n  text: {\n    color: colors.mainG,\n    fontSize: 20\n  }\n});\nexport default TextWSwitch;","map":{"version":3,"sources":["/Users/josieincase/Documents/ProjektB/PeriodTracker/components/TextWSwitch.js"],"names":["React","useState","colors","content","TextWSwitch","props","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","text","start8","container","false","mainBlk","true","primBlue","accBlue","mainG","StyleSheet","create","justifyContent","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,MAAP;AACA,OAAO,KAAKC,OAAZ;;;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAE7B,kBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,YAAY,CAAC,UAAAE,aAAa;AAAA,aAAI,CAACA,aAAL;AAAA,KAAd,CAAlB;AAAA,GAArB;;AAEA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,gBAA2BR,OAAO,CAACS;AAAnC,MADF,EAEA,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA,gBAEE,KAAC,MAAD;AACE,QAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAEZ,MAAM,CAACa,OAAhB;AAAyBC,UAAAA,IAAI,EAAEd,MAAM,CAACe;AAAtC,SADd;AAEE,QAAA,UAAU,EAAEX,SAAS,GAAGJ,MAAM,CAACgB,OAAV,GAAoBhB,MAAM,CAACiB,KAFlD;AAGE,QAAA,mBAAmB,EAAGjB,MAAM,CAACa,OAH/B;AAIE,QAAA,aAAa,EAAEP,YAJjB;AAKE,QAAA,KAAK,EAAEF;AALT;AAFF,MAFA;AAAA,IADF;AAgBD,CArBD;;AAuBA,IAAMI,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAC;AACVS,IAAAA,cAAc,EAAE;AADN,GADqB;AAI/BX,EAAAA,IAAI,EAAC;AACHY,IAAAA,KAAK,EAAErB,MAAM,CAACiB,KADX;AAEHK,IAAAA,QAAQ,EAAE;AAFP;AAJ0B,CAAlB,CAAf;AAUA,eAAepB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, StyleSheet, Switch } from \"react-native\";\nimport colors from \"../constants/colors\";\nimport * as content from \"../constants/texts\";\n\n/**\n * Text with Switch Component\n *\n * ToDo: herausfinden, wie man den den content hier im Text übergibt.\n * über Props.. sonst müssen halt die anderen Screens, die dieses Component nutzen, \n * jedes Mal n eigenes Text Benutzen.\n * \n * \n * @param {*} props\n * @returns Component\n */\n\n\nconst TextWSwitch = (props) => {\n\n  const [isEnabled, setIsEnabled] = useState(false);\n  const toggleSwitch = () => setIsEnabled(previousState => !previousState);\n\n  return(\n    <View >\n      <Text style={styles.text}>{content.start8}</Text>\n    <View style={styles.container}>\n      \n      <Switch\n        trackColor={{ false: colors.mainBlk, true: colors.primBlue }}\n        thumbColor={isEnabled ? colors.accBlue : colors.mainG}\n        ios_backgroundColor= {colors.mainBlk}\n        onValueChange={toggleSwitch}\n        value={isEnabled}\n      />\n    </View>\n    </View>\n  );\n\n};\n\nconst styles = StyleSheet.create({\n  container:{\n  justifyContent: 'center'\n  },\n  text:{\n    color: colors.mainG,\n    fontSize: 20, \n  }\n});\n\nexport default TextWSwitch;\n"]},"metadata":{},"sourceType":"module"}