{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport colors from \"../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Input = function Input(props) {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {\n      style: styles.input,\n      secureTextEntry: true,\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      placeholder: props.title,\n      placeholderTextColor: colors.primBlue,\n      maxLength: 8\n    }))\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"80%\",\n    justifyContent: \"center\"\n  },\n  input: {\n    borderBottomColor: colors.mainG,\n    borderBottomWidth: 2,\n    width: 200,\n    height: 50,\n    fontSize: 16\n  }\n});\nexport default Input;","map":{"version":3,"sources":["C:/Users/monav/Desktop/Uni/ProjektB/PeriodTracker/components/Input.js"],"names":["React","useState","colors","Input","props","styles","container","input","title","primBlue","StyleSheet","create","width","justifyContent","borderBottomColor","mainG","borderBottomWidth","height","fontSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,MAAP;;;AAeA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAGvB,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,SAAD,kCACKF,KADL;AAEE,MAAA,KAAK,EAAEC,MAAM,CAACE,KAFhB;AAGE,MAAA,eAAe,EAAE,IAHnB;AAIE,MAAA,cAAc,EAAC,MAJjB;AAKE,MAAA,WAAW,EAAE,KALf;AAME,MAAA,YAAY,EAAG,SANjB;AAOE,MAAA,WAAW,EAAEH,KAAK,CAACI,KAPrB;AAQE,MAAA,oBAAoB,EAAEN,MAAM,CAACO,QAR/B;AASE,MAAA,SAAS,EAAE;AATb;AADF,IADF;AAgBD,CAnBD;;AAqBA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAM/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,iBAAiB,EAAEZ,MAAM,CAACa,KADrB;AAELC,IAAAA,iBAAiB,EAAE,CAFd;AAGLJ,IAAAA,KAAK,EAAE,GAHF;AAILK,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,QAAQ,EAAE;AALL;AANwB,CAAlB,CAAf;AAeA,eAAef,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, TextInput } from \"react-native\";\r\nimport colors from \"../constants/colors\";\r\n\r\n/**\r\n * Password Input Component\r\n * maxLength currently at 8\r\n * \r\n * ToDo: \r\n * Style\r\n * eventually lower the placeholder on the line, so it doesn't hover above it that awkwardly. \r\n * Also when toggled/pressed change color mebbe..\r\n * & Logic ofc.. need to sort the min 4 PIN out \r\n * \r\n * @param {*} props\r\n * @returns Component\r\n */\r\nconst Input = (props) => {\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n       {...props}\r\n        style={styles.input}\r\n        secureTextEntry={true}\r\n        autoCapitalize=\"none\"\r\n        autoCorrect={false}\r\n        keyboardType = 'numeric'\r\n        placeholder={props.title}\r\n        placeholderTextColor={colors.primBlue}\r\n        maxLength={8}\r\n      \r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"80%\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    borderBottomColor: colors.mainG,\r\n    borderBottomWidth: 2,\r\n    width: 200,\r\n    height: 50,\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}