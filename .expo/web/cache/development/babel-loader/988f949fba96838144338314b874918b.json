{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport var storeMyStuff = function storeMyStuff(key, stuff) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function storeMyStuff$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          jsonValue = JSON.stringify(stuff);\n          AsyncStorage.setItem(key, jsonValue);\n          return _context.abrupt(\"return\", true);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          alert(\"Speichern von Objekt fehlgeschlagen\");\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var storeMyStringStuff = function storeMyStringStuff(key, stuff) {\n  return _regeneratorRuntime.async(function storeMyStringStuff$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          try {\n            AsyncStorage.setItem(key, stuff);\n          } catch (e) {\n            alert(\"Speichern von String fehlgeschlagen\");\n          }\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getMyStringStuff = function getMyStringStuff(key) {\n  return _regeneratorRuntime.async(function getMyStringStuff$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(AsyncStorage.getItem(key) != null)) {\n            _context3.next = 4;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", AsyncStorage.getItem(key));\n\n        case 4:\n          Alert(\"No Password found in Database\");\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getMyObjectStuff = function getMyObjectStuff(key) {\n  try {\n    var jsonValue = AsyncStorage.getItem(key);\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch (e) {\n    Error(\"My Object won't leave the Database\");\n  }\n};\nexport var removeMyStuff = function removeMyStuff(key) {\n  try {\n    AsyncStorage.removeItem(key);\n  } catch (e) {\n    Error(\"This Stuff is resistant and couldn't be removed\");\n  }\n};\nexport var getAllKeys = function getAllKeys() {\n  var keys;\n  return _regeneratorRuntime.async(function getAllKeys$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          keys = [];\n          _context4.prev = 1;\n          keys = AsyncStorage.getAllKeys();\n          return _context4.abrupt(\"return\", keys);\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](1);\n          Error(\"I can't find every Key\");\n\n        case 9:\n          console.log(keys);\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};","map":{"version":3,"sources":["C:/Users/monav/Desktop/Uni/ProjektB/PeriodTracker/database/CreateDatabase.js"],"names":["AsyncStorage","storeMyStuff","key","stuff","jsonValue","JSON","stringify","setItem","alert","storeMyStringStuff","e","getMyStringStuff","getItem","Alert","getMyObjectStuff","parse","Error","removeMyStuff","removeItem","getAllKeys","keys","console","log"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;AAOA,OAAO,IAAMC,YAAY,GAAC,SAAbA,YAAa,CAAMC,GAAN,EAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,UAAAA,SAFY,GAEDC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFC;AAGlBH,UAAAA,YAAY,CAACO,OAAb,CAAqBL,GAArB,EAA0BE,SAA1B;AAHkB,2CAIX,IAJW;;AAAA;AAAA;AAAA;AAMlBI,UAAAA,KAAK,CAAC,qCAAD,CAAL;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAUP,OAAO,IAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,CAAMP,GAAN,EAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAC5B,cAAG;AACCH,YAAAA,YAAY,CAACO,OAAb,CAAqBL,GAArB,EAA0BC,KAA1B;AAEH,WAHD,CAGC,OAAMO,CAAN,EAAQ;AACLF,YAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AASP,OAAO,IAAMG,gBAAgB,GAAC,SAAjBA,gBAAiB,CAAOT,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAErBF,YAAY,CAACY,OAAb,CAAqBV,GAArB,KAA4B,IAFP;AAAA;AAAA;AAAA;;AAAA,4CAGfF,YAAY,CAACY,OAAb,CAAqBV,GAArB,CAHe;;AAAA;AAKlBW,UAAAA,KAAK,CAAC,+BAAD,CAAL;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AASP,OAAO,IAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB,CAACZ,GAAD,EAAO;AACjC,MAAI;AACF,QAAME,SAAS,GAAEJ,YAAY,CAACY,OAAb,CAAqBV,GAArB,CAAjB;AACA,WAAOE,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACU,KAAL,CAAWX,SAAX,CAApB,GAA4C,IAAnD;AACD,GAHD,CAGC,OAAMM,CAAN,EAAQ;AACLM,IAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,CAPM;AAUP,OAAO,IAAMC,aAAa,GAAC,SAAdA,aAAc,CAACf,GAAD,EAAO;AAC9B,MAAI;AACAF,IAAAA,YAAY,CAACkB,UAAb,CAAwBhB,GAAxB;AACD,GAFH,CAEI,OAAMQ,CAAN,EAAS;AACTM,IAAAA,KAAK,CAAC,iDAAD,CAAL;AACD;AAEN,CAPM;AAUP,OAAO,IAAMG,UAAU,GAAC,SAAXA,UAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,IADgB,GACX,EADW;AAAA;AAGhBA,UAAAA,IAAI,GAAIpB,YAAY,CAACmB,UAAb,EAAR;AAHgB,4CAITC,IAJS;;AAAA;AAAA;AAAA;AAMhBJ,UAAAA,KAAK,CAAC,wBAAD,CAAL;;AANgB;AASpBK,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAToB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Alert} from 'react-native';\r\n\r\n\r\n\r\n\r\n//ErklÃ¤rung unter: https://react-native-async-storage.github.io/async-storage/docs/api\r\nexport const storeMyStuff=async(key, stuff)=>{\r\n    try{\r\n        const jsonValue= JSON.stringify(stuff)\r\n        AsyncStorage.setItem(key, jsonValue);\r\n        return true;\r\n    }catch(e){\r\n        alert(\"Speichern von Objekt fehlgeschlagen\");\r\n    }\r\n};\r\n\r\nexport const storeMyStringStuff=async(key, stuff)=>{\r\n    try{\r\n        AsyncStorage.setItem(key, stuff);\r\n      \r\n    }catch(e){\r\n        alert(\"Speichern von String fehlgeschlagen\");\r\n    }\r\n};\r\n\r\nexport const getMyStringStuff=async (key)=>{\r\n    \r\n      if(AsyncStorage.getItem(key)!= null){\r\n        return AsyncStorage.getItem(key)\r\n        }else{\r\n            Alert(\"No Password found in Database\")\r\n        }\r\n};\r\n\r\nexport const getMyObjectStuff=(key)=>{\r\n    try {\r\n      const jsonValue =AsyncStorage.getItem(key)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    }catch(e){\r\n        Error(\"My Object won't leave the Database\");\r\n    }\r\n};\r\n\r\n\r\nexport const removeMyStuff=(key)=>{\r\n    try {\r\n        AsyncStorage.removeItem(key)\r\n      } catch(e) {\r\n        Error(\"This Stuff is resistant and couldn't be removed\");// remove error\r\n      }\r\n\r\n}\r\n\r\n//Returns an Array of all Keys of the database  \r\nexport const getAllKeys=async()=>{\r\n    let keys=[]\r\n    try{\r\n        keys =  AsyncStorage.getAllKeys() \r\n        return keys;\r\n    }catch(e){\r\n        Error(\"I can't find every Key\");// remove error\r\n        \r\n    }\r\n    console.log(keys)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}