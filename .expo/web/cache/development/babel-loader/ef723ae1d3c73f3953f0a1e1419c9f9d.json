{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"./constants/colors\";\nimport InfoTextScreen from \"./screens/InfoTextScreen\";\nimport LogoScreen from \"./screens/LogoScreen\";\nimport ChoosePwScreen from \"./screens/ChoosePwScreen\";\nimport CalendarScreen from \"./screens/CalendarScreen\";\nimport MensCycleScreen from \"./screens/MensCycleScreen\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport * as content from \"./constants/texts\";\nimport ChangePWScreen from \"./screens/ChangePWScreen\";\nimport IndexCal from \"./screens/IndexCal\";\nimport IndexCircle from \"./screens/IndexCircle\";\nimport LoginPWScreen from \"./screens/LoginPWScreen\";\nimport Paginator from \"./components/Paginator\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nvar Tab = createMaterialTopTabNavigator();\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      tabBarPosition: \"bottom\",\n      screenOptions: {\n        tabBarShowLabel: false,\n        indicatorStyle: {\n          backgroundColor: \"transparent\"\n        },\n        tabBarIconStyle: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        tabBarItemStyle: {\n          backgroundColor: \"#00ff00\",\n          width: \"30\",\n          paddingHorizontal: \"1px\"\n        },\n        tabBarContentContainerStyle: {\n          backgroundColor: \"#ff0000\",\n          justifyContent: \"center\"\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: IndexCal,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var focused = _ref.focused;\n            return _jsx(View, {\n              style: {\n                height: 10,\n                width: 10,\n                borderRadius: 10,\n                backgroundColor: focused ? \"#493d8a\" : \"#748c94\"\n              }\n            });\n          },\n          tabBarIconStyle: {\n            display: \"flex\",\n            alignItems: \"flex-end\",\n            justifyContent: \"center\"\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused;\n            return _jsx(View, {\n              style: {\n                height: 10,\n                width: 10,\n                borderRadius: 10,\n                backgroundColor: focused ? \"#493d8a\" : \"#748c94\"\n              }\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Seite3\",\n        component: ChoosePwScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused;\n            return _jsx(View, {\n              style: {\n                height: 10,\n                width: 10,\n                borderRadius: 10,\n                backgroundColor: focused ? \"#493d8a\" : \"#748c94\"\n              }\n            });\n          },\n          tabBarIconStyle: {\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\"\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.mainLG,\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/josieincase/Documents/ProjektB/PeriodTracker/App.js"],"names":["StatusBar","React","colors","InfoTextScreen","LogoScreen","ChoosePwScreen","CalendarScreen","MensCycleScreen","SettingsScreen","content","ChangePWScreen","IndexCal","IndexCircle","LoginPWScreen","Paginator","createMaterialTopTabNavigator","Tab","NavigationContainer","App","tabBarShowLabel","indicatorStyle","backgroundColor","tabBarIconStyle","display","justifyContent","alignItems","tabBarItemStyle","width","paddingHorizontal","tabBarContentContainerStyle","tabBarIcon","focused","height","borderRadius","styles","StyleSheet","create","container","mainLG"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport colors from \"./constants/colors\";\nimport InfoTextScreen from \"./screens/InfoTextScreen\";\nimport LogoScreen from \"./screens/LogoScreen\";\nimport ChoosePwScreen from \"./screens/ChoosePwScreen\";\nimport CalendarScreen from \"./screens/CalendarScreen\";\nimport MensCycleScreen from \"./screens/MensCycleScreen\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport * as content from \"./constants/texts\";\nimport ChangePWScreen from \"./screens/ChangePWScreen\";\nimport IndexCal from \"./screens/IndexCal\";\nimport IndexCircle from \"./screens/IndexCircle\";\nimport LoginPWScreen from \"./screens/LoginPWScreen\";\nimport Paginator from \"./components/Paginator\";\n/**\n * The MASTER APP.\n * We can do it! *peptalk*\n * Note: we still need an Navigation Component and the entire Logic\n *\n * @returns\n */\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\n\nconst Tab = createMaterialTopTabNavigator();\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nexport default function App() {\n  // let content = <LoginPWScreen onSavePin={selectedNumber} />;\n  return (\n    <NavigationContainer>\n      {/* Rest of your app code */}\n      <Tab.Navigator\n        tabBarPosition={\"bottom\"}\n        screenOptions={{\n          tabBarShowLabel: false,\n          indicatorStyle: {\n            backgroundColor: \"transparent\",\n          },\n          tabBarIconStyle: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          },\n          tabBarItemStyle: {\n            //color of item-object\n            backgroundColor: \"#00ff00\",\n            width: \"30\",\n            paddingHorizontal: \"1px\",\n          },\n          tabBarContentContainerStyle: {\n            //total backgroundcolor of bar\n            backgroundColor: \"#ff0000\",\n            justifyContent: \"center\",\n          },\n        }}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={IndexCal}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  height: 10,\n                  width: 10,\n                  borderRadius: 10,\n                  backgroundColor: focused ? \"#493d8a\" : \"#748c94\",\n                }}\n              />\n            ),\n            tabBarIconStyle: {\n              display: \"flex\",\n              alignItems: \"flex-end\",\n              justifyContent: \"center\",\n            },\n          }}\n        />\n        <Tab.Screen\n          name=\"Settings\"\n          component={SettingsScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  height: 10,\n                  width: 10,\n                  borderRadius: 10,\n                  backgroundColor: focused ? \"#493d8a\" : \"#748c94\",\n                }}\n              />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Seite3\"\n          component={ChoosePwScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  height: 10,\n                  width: 10,\n                  borderRadius: 10,\n                  backgroundColor: focused ? \"#493d8a\" : \"#748c94\",\n                }}\n              />\n            ),\n            tabBarIconStyle: {\n              display: \"flex\",\n              alignItems: \"flex-start\",\n              justifyContent: \"center\",\n            },\n          }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.mainLG,\n    height: \"100%\",\n  },\n});\n\n/**\n<<<<<<< HEAD\n * Just Commentary Dump to test diff Screens with their props.\n *  <MensCycleScreen title= \"Weiter\"/>\n *  <LogoScreen title='Press Me'/>\n * <NotificationScreen/>\n * <InfoTextScreen header=\"Hallo!\" title=\"Weiter\"/>\n * <ChoosePwScreen title=\"Weiter\"/>\n *  <CalendarScreen\n        header=\"Wann hattest du deine letzte Menstruation?\"\n        title=\"Weiter\"\n      />\n * <ChangePWScreen title=\"ändern\"/>\n */\n"]},"metadata":{},"sourceType":"module"}